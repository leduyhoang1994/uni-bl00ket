apiVersion: apps/v1
kind: Deployment
metadata:
  name: uni-class-game-backend-nginx
  labels:
    app: uni-class-game-backend-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: uni-class-game-backend-nginx
  template:
    metadata:
      labels:
        app: uni-class-game-backend-nginx
    spec:
      containers:
      - name: backend-nginx
        image: your-registry/uni-class-game:latest  # Thay đổi theo registry của bạn
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        - name: FRONTEND_DOMAIN
          value: "your-frontend-domain.com"
        - name: REDIS_CONNECTION_URL
          valueFrom:
            configMapKeyRef:
              name: uni-class-game-config
              key: redis-url
        - name: MONGO_CONNECTION_URL
          valueFrom:
            configMapKeyRef:
              name: uni-class-game-config
              key: mongo-url
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: uni-class-game-secrets
              key: api-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: nginx-logs
          mountPath: /var/log/nginx
      volumes:
      - name: nginx-logs
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: uni-class-game-service
  labels:
    app: uni-class-game-backend-nginx
spec:
  selector:
    app: uni-class-game-backend-nginx
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: uni-class-game-config
data:
  redis-url: "redis://redis-service:6379"
  mongo-url: "mongodb://mongodb-service:27017/bl00ket"
---
apiVersion: v1
kind: Secret
metadata:
  name: uni-class-game-secrets
type: Opaque
data:
  api-key: eW91ci1hcGkta2V5LWhlcmU=  # base64 encoded API key
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uni-class-game-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uni-class-game-service
            port:
              number: 80
